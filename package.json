{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "copy-assets:unix": "mkdir -p client/public/images && cp -r public/images/* client/public/images/ && cp public/*.png public/*.ico public/*.svg public/site.webmanifest client/public/",
    "copy-assets:win": "if not exist client\\public\\images mkdir client\\public\\images && xcopy /E /Y public\\images client\\public\\images\\ && copy /Y public\\*.png public\\*.ico public\\*.svg public\\site.webmanifest client\\public\\",
    "copy-assets": "node -e \"process.platform === 'win32' ? process.exit(require('child_process').spawnSync('npm', ['run', 'copy-assets:win'], {stdio:'inherit'}).status) : process.exit(require('child_process').spawnSync('npm', ['run', 'copy-assets:unix'], {stdio:'inherit'}).status)\"",
    "dev:client": "vite --force",
    "dev:server": "tsx --watch server/server/index.ts",
    "dev": "npm run copy-assets && concurrently --kill-others-on-fail \"npm run dev:server\" \"node -e \\\"setTimeout(() => require('child_process').spawn('npm', ['run', 'dev:client'], {stdio:'inherit'}), 2000)\\\"\"",
    "build:client": "cd client && npm install react-helmet-async && cd .. && vite build",
    "build:server": "esbuild server/server/index.ts --platform=node --bundle --format=esm --outfile=dist/index.js --packages=external --target=es2022",
    "build": "npm run copy-assets && npm run build:client && npm run build:server",
    "build:analyze": "npm run build:client -- --analyze",
    "start": "cross-env NODE_ENV=production tsx server/server/index.ts",
    "check": "tsc",
    "db:push": "drizzle-kit push",
    "db:migrate": "tsx scripts/run-migrations.js",
    "db:migrate:test": "cross-env NODE_ENV=test tsx scripts/run-migrations.js",
    "create:test-users": "tsx scripts/create-test-users.js",
    "test:auth-persistence": "tsx scripts/test-auth-persistence.js",
    "test:email-link": "tsx scripts/test-email-link-auth.js",
    "test": "vitest",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:server": "vitest run server/**/*.test.{ts,js}",
    "test:server:coverage": "vitest run server/**/*.test.{ts,js} --coverage",
    "test:integration": "vitest run tests/integration/**/*.test.{ts,js}",
    "test:api": "vitest run tests/api/**/*.test.{ts,js}",
    "test:performance": "tsx tests/performance/api-performance.ts",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:visual": "playwright test tests/visual/*.spec.ts",
    "test:a11y": "playwright test tests/accessibility/*.spec.ts",
    "test:smoke:staging": "playwright test tests/smoke/ --config=playwright.staging.config.ts",
    "test:smoke:production": "playwright test tests/smoke/ --config=playwright.production.config.ts",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "lighthouse": "lhci autorun",
    "security:audit": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "netlify:dev": "netlify dev",
    "netlify:build": "npm run copy-assets && npm run build:client",
    "netlify:prepare": "node scripts/prepare-netlify-deploy.js",
    "env:sanitize": "node scripts/sanitize-env.js",
    "env:check": "node -e \"if(require('fs').existsSync('.env') && require('fs').existsSync('client/.env')) { console.log('✅ Environment files exist'); process.exit(0); } else { console.error('❌ Missing .env files. Run: cp .env.example .env && cp .env.example client/.env'); process.exit(1); }\"",
    "qa:all": "npm run lint && npm run type-check && npm run test:coverage && npm run test:e2e",
    "qa:quick": "npm run lint && npm run type-check && npm run test",
    "precommit": "npm run qa:quick"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "0.51.0",
    "@firebasegen/default-connector": "file:dataconnect-generated/js/default-connector",
    "@google/generative-ai": "0.24.1",
    "@hookform/resolvers": "^3.9.1",
    "@neondatabase/serverless": "^0.10.4",
    "@prisma/client": "6.11.1",
    "@radix-ui/react-accordion": "^1.2.8",
    "@radix-ui/react-alert-dialog": "^1.1.11",
    "@radix-ui/react-avatar": "^1.1.7",
    "@radix-ui/react-checkbox": "^1.2.3",
    "@radix-ui/react-dialog": "^1.1.11",
    "@radix-ui/react-dropdown-menu": "^2.1.12",
    "@radix-ui/react-label": "^2.1.4",
    "@radix-ui/react-popover": "1.1.13",
    "@radix-ui/react-progress": "^1.1.4",
    "@radix-ui/react-scroll-area": "^1.2.6",
    "@radix-ui/react-select": "^2.2.2",
    "@radix-ui/react-separator": "^1.1.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.2.2",
    "@radix-ui/react-tabs": "^1.1.9",
    "@radix-ui/react-toast": "^1.2.11",
    "@radix-ui/react-tooltip": "1.2.6",
    "@tanstack/react-query": "^5.60.5",
    "@tanstack/react-query-devtools": "^5.75.2",
    "@types/pdfkit": "0.13.9",
    "@types/react-helmet": "^6.1.11",
    "@types/react-router-dom": "5.3.3",
    "@types/styled-components": "5.1.34",
    "axios": "^1.9.0",
    "better-sqlite3": "^11.9.1",
    "brace-expansion": "4.0.1",
    "class-variance-authority": "^0.7.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "drizzle-orm": "^0.39.3",
    "drizzle-zod": "^0.7.0",
    "express": "^4.21.2",
    "firebase": "11.6.1",
    "firebase-admin": "13.4.0",
    "framer-motion": "12.12.1",
    "html2canvas": "1.4.1",
    "jspdf": "3.0.1",
    "lucide-react": "^0.453.0",
    "multer": "1.4.5-lts.2",
    "pdfkit": "0.17.1",
    "postgres": "^3.4.5",
    "prisma": "6.11.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "2.0.5",
    "react-hook-form": "7.57.0",
    "react-router-dom": "7.6.2",
    "recharts": "^2.13.0",
    "styled-components": "6.1.19",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwind-merge": "^3.2.0",
    "tailwindcss-animate": "^1.0.7",
    "wouter": "^3.3.5",
    "ws": "8.18.2",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.15",
    "@testing-library/dom": "10.4.0",
    "@testing-library/react": "16.3.0",
    "@testing-library/user-event": "14.6.1",
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^20.16.11",
    "@types/react": "^18.2.0",
    "@typescript-eslint/eslint-plugin": "8.34.1",
    "@typescript-eslint/parser": "8.34.1",
    "@vitejs/plugin-react": "^4.3.2",
    "concurrently": "^9.1.2",
    "cross-env": "7.0.3",
    "drizzle-kit": "^0.31.1",
    "esbuild": "0.25.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-prettier": "^5.3.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jsdom": "24.1.3",
    "netlify-cli": "22.1.3",
    "npm-force-resolutions": "^0.0.10",
    "serverless-http": "^3.2.0",
    "tailwindcss": "^3.4.14",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "6.3.5",
    "vitest": "^3.1.2"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  },
  "overrides": {
    "rimraf": "^4.0.0",
    "glob": "^9.0.0",
    "move-concurrently": "^1.0.1",
    "figgy-pudding": "^3.5.2",
    "copy-concurrently": "^1.0.5",
    "fs-write-stream-atomic": "^1.0.10",
    "esbuild": "0.25.0",
    "@netlify/edge-bundler": {
      "esbuild": "0.25.0"
    },
    "@netlify/zip-it-and-ship-it": {
      "esbuild": "0.25.0"
    }
  }
}
